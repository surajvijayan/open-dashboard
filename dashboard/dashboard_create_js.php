<?php

if ($argc == 4) 
{
	if (php_sapi_name() == 'cli')
	{
		switch($argv[2])
		{
			case "js":
				create_js($argv[1]);
				break;
			case "php":
				create_php($argv[1],$argv[3]);
				break;
			case "widgets":
				create_widgets($argv[1],$argv[3]);
				break;
			default:
				print "Usage: $0 <dashboard_xx.inc> [php|js] <header>" . "\n";
				break;
		}
	}
}
else
	print "Usage: $0 <dashboard_xx.inc> [php|js|widgets] <header>" . "\n";

/*********************************************************************************************/

function print_top()
{
echo <<<EOF

// This script has been auto-generated by Open-Dashboard. Never attempt to
// modify this.
// Suraj Vijayan
//
function get_theme_cookie()
{
    var cookieName = 'themeID';
    var search = new RegExp(cookieName + '=([^;]*)');
    var matches = search.exec(document.cookie);
    var themeId = (matches ? matches[1] : '') || '';
    if(themeId == '')
		themeId = 'smoothness';
    set_theme(themeId);
}
/***************************************************************************************************/

function set_theme(id)
{
    switch(id)
    {
        case 'uidarkness':
            AmCharts.theme = AmCharts.themes.black;
        case 'dotluv':
            AmCharts.theme = AmCharts.themes.dark;
            break;
        case 'darkhive':
            AmCharts.theme = AmCharts.themes.black;
            break;
        case 'blacktie':
            AmCharts.theme = AmCharts.themes.dark;
            break;
        case 'uilightness':
        case 'smoothness':
            AmCharts.theme = AmCharts.themes.light;
            break;
        case 'cupertino':
            AmCharts.theme = 'black';
            $(".chosen-choices li").css("background","LightBlue");
            break;
        default:
            AmCharts.theme = AmCharts.themes.light;
            $(".chosen-choices li").css("background","LightBlue");
            break;
    }
}
/***************************************************************************************************/

function fn(id,name,url)
{
    window.location.reload(true);
}
/***************************************************************************************************/

function resize_div() 
{
	vpw = $(window).width();
	vph = $(window).height();
	vph = vph - 100;
	$('#scroll').css({'height': vph + 'px'});
}
/***************************************************************************************************/

function dispatch_events(ROOT)
{
var option;
$.themes.setDefaults({themeBase: '../jquery-ui-themes-1.12.1/themes/',
                      previews: '../js/themes-preview.gif',
                      icons: '../js/themes.gif',
                      cookieExpiry: 7,
                      themeFile: 'jquery-ui.min.css',
                      showPreview: false,
					  defaultTheme:'smoothness',
                      onSelect:fn});
$('#hoverThemes').hover(function() { $('#selectThemes').toggle()});
$('#selectThemes').hide();
$(window).onresize = function(event) 
{
	resize_div();
};

AmCharts.ready(function(){
	resize_div();
	$(window).on('resize', function()
	{
		resize_div();
	});
    get_theme_cookie();
    $('#selectThemes').themes({themes: ['darkhive','cupertino','smoothness','dotluv']});
    $('#scroll').css({'z-index':'1','position':'absolute'});
    $( '#list1 li').click(function()
    {
        $('#list1').option = $(this).text();
        $("h2#heading").text(option);
    });
    $(".date_input").datepicker({dateFormat: "yy-mm-dd"}).attr('readonly', 'true');
	$('.chosen-select').chosen({max_selected_options:7}).change();
EOF;
}
/*****************************************************************************************/

function create_js($inc_file)
{
	include_once($inc_file);
	print_top();
	print "\t" . '$("h4#date").text("Last Updated: "+Date());' . "\n";
	$no = 1;
	foreach ($widgets_array as $row)
	{
		foreach ($row as $widget)
		{
			$div = 'DIV_' . $no;
			if($widget["TYPE"] == "chart")
			{
				switch ($widget["SIZE"])
				{
					case 'small':
						print "\t" . "$('#" . $div . "').addClass('small_div_class');" . "\n";
						break;
					case 'medium':
						print "\t" . "$('#" . $div . "').addClass('med_div_class');" . "\n";
						break;
					case 'big':
						print "\t" . "$('#" . $div . "').addClass('big_div_class');" . "\n";
						break;
				}
				print "\t" . "$('#" . $div . "').show();" . "\n";
				print "\t" . $widget['NAME'] . "_" . "submit(ROOT,'" . $div . "','#form_" . $widget['NAME'] . "','#click_" . $widget['NAME'] . "');" . "\n";
				print "\t" . "$('#form_" . $widget['NAME'] . "').trigger('submit');" . "\n";
				print "\t" . '$("h4#date").text("Last Updated: "+Date());' . "\n";
				if(!empty($widget["REFRESH_SECS"]) && $widget["REFRESH_SECS"] > 0)
				{
					$secs = $widget["REFRESH_SECS"] * 1000;
					print "\tsetInterval(" . "\n\t\tfunction()\n\t\t{\n\t\t\t" . "$('#form_" . $widget['NAME'] . "').trigger('submit');;\n\t\t},\n\t" . $secs . ");\n";
				}
			}
			else
			{
				switch ($widget["SIZE"])
				{
					case 'small':
						print "\t" . "$('#" . $div . "').addClass('small_div_class');" . "\n";
						break;
					case 'medium':
						print "\t" . "$('#" . $div . "').addClass('med_div_class');" . "\n";
						break;
					case 'big':
						print "\t" . "$('#" . $div . "').addClass('big_div_class');" . "\n";
						break;
				}
				print "\t" . $widget['NAME' ] . "_submit(ROOT,'" . $div . "','#form_" . $widget['NAME'] . "');\n";
				print "\t" . "$('#form_" . $widget['NAME'] . "').trigger('submit');" . "\n";
				print "\t" . '$("h4#date").text("Last Updated: "+Date());' . "\n";
				if(!empty($widget["REFRESH_SECS"]) && $widget["REFRESH_SECS"] > 0)
				{
					$secs = $widget["REFRESH_SECS"] * 1000;
					print "\tsetInterval(" . "\n\t\tfunction()\n\t\t{\n\t\t\t" . "$('#form_" . $widget['NAME'] . "').trigger('submit');;\n\t\t},\n\t" . $secs .");\n";
				}
			}
			$no++;
		}
	}
	print "});\n}\n";
	print "/***************************************************************************************************/\n";
}
/*****************************************************************************************/

function create_php($inc_file,$header)
{
	$tokens = explode('.',$inc_file);
	$js_file = $tokens[0] . ".js";
	$php_file = $tokens[0] . ".php";
echo <<<EOF
<?php
/*
	Open-Dashboard: Designed by Suraj Vijayan - First Release: August 2018
*/
header("Access-Control-Allow-Origin: *");
session_start();
include_once('../vars.inc');
require_once('./dashboard.php');
require_once('./$inc_file');

print_header('$js_file','$php_file');
// Dashboard Menu stuff..
dashboard_header(\$ROOT,'$header');
show_widgets(\$widgets_array);
dashboard_footera(\$ROOT);
?>
EOF;
}
/*****************************************************************************************/

function create_widgets($inc_file)
{
	include_once($inc_file);
echo <<<EOF
/* Suraj Vijayan
 *
 * Got this from: http://chapter31.com/2006/12/07/including-js-files-from-within-js-files/
 *
 */
//this function includes all necessary js files for the application
function include(file)
{
    var script  = document.createElement('script');
    script.src  = file;
    script.type = 'text/javascript';
    script.defer = true;
    document.getElementsByTagName('head').item(0).appendChild(script);
}
EOF;
	print "\n";
	foreach ($widgets_array as $row)
	{
		foreach ($row as $widget)
		{
			if($widget["TYPE"] == "chart")
				$dir = "charts";
			else
				$dir = "grids";
			print "include(" . "$dir" . "/" . $widget["NAME"] . ".js" .");\n";
		}
	}
}
/*****************************************************************************************/
?>
